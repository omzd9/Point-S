{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\ZDLaP\\\\Desktop\\\\ReactProject\\\\connect\\\\point s connect v2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\ZDLaP\\\\Desktop\\\\ReactProject\\\\connect\\\\point s connect v2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ZDLaP\\\\Desktop\\\\ReactProject\\\\connect\\\\point s connect v2\\\\src\\\\AddProductsTable.js\";\nimport React from \"react\";\nimport MaterialTable, { TablePagination } from \"material-table\";\nexport default function AddProductsTable() {\n  const _React$useState = React.useState({\n    columns: [{\n      title: \"Produit\",\n      field: \"product\",\n      lookup: {\n        1: \"Produit 01\",\n        2: \"Produit 02\"\n      }\n    }, {\n      title: \"Quantité\",\n      field: \"quantity\",\n      type: \"numeric\"\n    }, {\n      title: \"Prix\",\n      field: \"price\",\n      type: \"numeric\",\n      editable: \"never\"\n    }],\n    data: []\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  return React.createElement(MaterialTable, {\n    title: \"Ajouter les produits\",\n    columns: state.columns,\n    data: state.data,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          const data = [...state.data];\n          data.push(newData);\n          setState(_objectSpread({}, state, {\n            data\n          }));\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          const data = [...state.data];\n          data[data.indexOf(oldData)] = newData;\n          setState(_objectSpread({}, state, {\n            data\n          }));\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          const data = [...state.data];\n          data.splice(data.indexOf(oldData), 1);\n          setState(_objectSpread({}, state, {\n            data\n          }));\n        }, 600);\n      })\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["C:\\Users\\ZDLaP\\Desktop\\ReactProject\\connect\\point s connect v2\\src\\AddProductsTable.js"],"names":["React","MaterialTable","TablePagination","AddProductsTable","useState","columns","title","field","lookup","type","editable","data","state","setState","onRowAdd","newData","Promise","resolve","setTimeout","push","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,IAAwBC,eAAxB,QAA+C,gBAA/C;AAEA,eAAe,SAASC,gBAAT,GAA4B;AAAA,0BACfH,KAAK,CAACI,QAAN,CAAe;AACvCC,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,KAAK,EAAE,SADT;AAEEC,MAAAA,KAAK,EAAE,SAFT;AAGEC,MAAAA,MAAM,EAAE;AAAE,WAAG,YAAL;AAAmB,WAAG;AAAtB;AAHV,KADO,EAMP;AAAEF,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,KAAK,EAAE,UAA5B;AAAwCE,MAAAA,IAAI,EAAE;AAA9C,KANO,EAOP;AAAEH,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE,OAAxB;AAAiCE,MAAAA,IAAI,EAAE,SAAvC;AAAkDC,MAAAA,QAAQ,EAAE;AAA5D,KAPO,CAD8B;AAUvCC,IAAAA,IAAI,EAAE;AAViC,GAAf,CADe;AAAA;AAAA,QAClCC,KADkC;AAAA,QAC3BC,QAD2B;;AAczC,SACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,sBADR;AAEE,IAAA,OAAO,EAAED,KAAK,CAACP,OAFjB;AAGE,IAAA,IAAI,EAAEO,KAAK,CAACD,IAHd;AAIE,IAAA,QAAQ,EAAE;AACRG,MAAAA,QAAQ,EAAEC,OAAO,IACf,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AACrBC,QAAAA,UAAU,CAAC,MAAM;AACfD,UAAAA,OAAO;AACP,gBAAMN,IAAI,GAAG,CAAC,GAAGC,KAAK,CAACD,IAAV,CAAb;AACAA,UAAAA,IAAI,CAACQ,IAAL,CAAUJ,OAAV;AACAF,UAAAA,QAAQ,mBAAMD,KAAN;AAAaD,YAAAA;AAAb,aAAR;AACD,SALS,EAKP,GALO,CAAV;AAMD,OAPD,CAFM;AAURS,MAAAA,WAAW,EAAE,CAACL,OAAD,EAAUM,OAAV,KACX,IAAIL,OAAJ,CAAYC,OAAO,IAAI;AACrBC,QAAAA,UAAU,CAAC,MAAM;AACfD,UAAAA,OAAO;AACP,gBAAMN,IAAI,GAAG,CAAC,GAAGC,KAAK,CAACD,IAAV,CAAb;AACAA,UAAAA,IAAI,CAACA,IAAI,CAACW,OAAL,CAAaD,OAAb,CAAD,CAAJ,GAA8BN,OAA9B;AACAF,UAAAA,QAAQ,mBAAMD,KAAN;AAAaD,YAAAA;AAAb,aAAR;AACD,SALS,EAKP,GALO,CAAV;AAMD,OAPD,CAXM;AAmBRY,MAAAA,WAAW,EAAEF,OAAO,IAClB,IAAIL,OAAJ,CAAYC,OAAO,IAAI;AACrBC,QAAAA,UAAU,CAAC,MAAM;AACfD,UAAAA,OAAO;AACP,gBAAMN,IAAI,GAAG,CAAC,GAAGC,KAAK,CAACD,IAAV,CAAb;AACAA,UAAAA,IAAI,CAACa,MAAL,CAAYb,IAAI,CAACW,OAAL,CAAaD,OAAb,CAAZ,EAAmC,CAAnC;AACAR,UAAAA,QAAQ,mBAAMD,KAAN;AAAaD,YAAAA;AAAb,aAAR;AACD,SALS,EAKP,GALO,CAAV;AAMD,OAPD;AApBM,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAoCD","sourcesContent":["import React from \"react\";\r\nimport MaterialTable, { TablePagination } from \"material-table\";\r\n\r\nexport default function AddProductsTable() {\r\n  const [state, setState] = React.useState({\r\n    columns: [\r\n      {\r\n        title: \"Produit\",\r\n        field: \"product\",\r\n        lookup: { 1: \"Produit 01\", 2: \"Produit 02\" }\r\n      },\r\n      { title: \"Quantité\", field: \"quantity\", type: \"numeric\" },\r\n      { title: \"Prix\", field: \"price\", type: \"numeric\", editable: \"never\" }\r\n    ],\r\n    data: []\r\n  });\r\n\r\n  return (\r\n    <MaterialTable\r\n      title=\"Ajouter les produits\"\r\n      columns={state.columns}\r\n      data={state.data}\r\n      editable={{\r\n        onRowAdd: newData =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              const data = [...state.data];\r\n              data.push(newData);\r\n              setState({ ...state, data });\r\n            }, 600);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              const data = [...state.data];\r\n              data[data.indexOf(oldData)] = newData;\r\n              setState({ ...state, data });\r\n            }, 600);\r\n          }),\r\n        onRowDelete: oldData =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              const data = [...state.data];\r\n              data.splice(data.indexOf(oldData), 1);\r\n              setState({ ...state, data });\r\n            }, 600);\r\n          })\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}