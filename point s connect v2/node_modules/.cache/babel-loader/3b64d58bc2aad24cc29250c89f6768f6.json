{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ZDLaP\\\\Desktop\\\\ReactProject\\\\connect\\\\point s connect v2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ZDLaP\\\\Desktop\\\\ReactProject\\\\connect\\\\point s connect v2\\\\src\\\\AddOrderStepper.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddProductsTable from './AddProductsTable';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '90%'\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction getSteps() {\n  return ['Ajouter les produits', 'Confirmer la commande', 'Envoyer la commandes'];\n}\n\nfunction getStepContent(stepIndex) {\n  switch (stepIndex) {\n    case 0:\n      return getAddProducts();\n\n    case 1:\n      return getConfirmOrder();\n\n    case 2:\n      return getSentOrder();\n\n    default:\n      return 'Uknown stepIndex';\n  }\n}\n\nfunction getAddProducts() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(AddProductsTable, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n}\n\nfunction getConfirmOrder() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  });\n}\n\nfunction getSentOrder() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  });\n}\n\nexport default function AddOrderStepper() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        activeStep = _React$useState2[0],\n        setActiveStep = _React$useState2[1];\n\n  const steps = getSteps();\n\n  function handleNext() {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  }\n\n  function handleReset() {\n    setActiveStep(0);\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Stepper, {\n    activeStep: activeStep,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, steps.map((label, index) => {\n    const stepProps = {};\n    const labelProps = {};\n    return React.createElement(Step, Object.assign({\n      key: label\n    }, stepProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(StepLabel, Object.assign({}, labelProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), label));\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, activeStep === steps.length ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.instructions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"All steps completed - you're finished\"), React.createElement(Button, {\n    onClick: handleReset,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Reset\")) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.instructions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, getStepContent(activeStep)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Button, {\n    disabled: activeStep === 0,\n    onClick: handleBack,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Back\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleNext,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, activeStep === steps.length - 1 ? 'Finish' : 'Next')))));\n}","map":{"version":3,"sources":["C:\\Users\\ZDLaP\\Desktop\\ReactProject\\connect\\point s connect v2\\src\\AddOrderStepper.js"],"names":["React","makeStyles","Stepper","Step","StepLabel","Button","Typography","AddProductsTable","useStyles","theme","root","width","button","marginRight","spacing","instructions","marginTop","marginBottom","getSteps","getStepContent","stepIndex","getAddProducts","getConfirmOrder","getSentOrder","AddOrderStepper","classes","useState","activeStep","setActiveStep","steps","handleNext","prevActiveStep","handleBack","handleReset","map","label","index","stepProps","labelProps","length"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport AddProductsTable from './AddProductsTable';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '90%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Ajouter les produits', 'Confirmer la commande', 'Envoyer la commandes'];\r\n}\r\n\r\nfunction getStepContent(stepIndex) {\r\n    switch (stepIndex) {\r\n        case 0:\r\n            return getAddProducts();\r\n        case 1:\r\n            return getConfirmOrder();\r\n        case 2:\r\n            return getSentOrder();\r\n\r\n        default:\r\n            return 'Uknown stepIndex';\r\n    }\r\n}\r\n\r\nfunction getAddProducts() {\r\n    return <div>\r\n            <AddProductsTable/>\r\n            <br/>\r\n        </div>\r\n}\r\n\r\nfunction getConfirmOrder() {\r\n    return <div>\r\n        </div>\r\n}\r\n\r\nfunction getSentOrder() {\r\n    return <div>\r\n        \r\n    </div>\r\n}\r\n\r\nexport default function AddOrderStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n\r\n  function handleNext() {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleReset() {\r\n    setActiveStep(0);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const labelProps = {};\r\n          \r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Button onClick={handleReset} className={classes.button}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n            \r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n              >\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}