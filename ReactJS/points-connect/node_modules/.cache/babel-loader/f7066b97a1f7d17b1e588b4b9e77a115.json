{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZDLaP\\\\Desktop\\\\ReactProject\\\\connect\\\\ReactJS\\\\points-connect\\\\src\\\\app\\\\App.js\";\nimport React, { Component } from 'react';\nimport '../assets/css/App.css';\nimport { Route, withRouter, Switch } from 'react-router-dom';\nimport { getCurrentUser } from '../util/APIUtils';\nimport { ACCESS_TOKEN } from '../constants';\nimport \"../assets/css/App.css\";\nimport Login from '../views/Login';\nimport Signup from '../views/Signup';\nimport Profile from '../views/Profile';\nimport Home from '../views/Home';\nimport AppHeader from '../components/AppHeader';\nimport NotFound from '../components/NotFound';\nimport LoadingIndicator from '../components/LoadingIndicator';\nimport PrivateRoute from '../components/PrivateRoute';\nimport { Layout, notification } from 'antd';\nconst Content = Layout.Content;\nconst Footer = Layout.Footer;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      isAuthenticated: false,\n      isLoading: false\n    };\n    this.handleLogout = this.handleLogout.bind(this);\n    this.loadCurrentUser = this.loadCurrentUser.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    notification.config({\n      placement: 'topRight',\n      top: 70,\n      duration: 3\n    });\n  }\n\n  loadCurrentUser() {\n    this.setState({\n      isLoading: true\n    });\n    getCurrentUser().then(response => {\n      this.setState({\n        currentUser: response,\n        isAuthenticated: true,\n        isLoading: false\n      });\n    }).catch(error => {\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.loadCurrentUser();\n  }\n\n  handleLogout(redirectTo = \"/\", notificationType = \"success\", description = \"You're successfully logged out.\") {\n    localStorage.removeItem(ACCESS_TOKEN);\n    this.setState({\n      currentUser: null,\n      isAuthenticated: false\n    });\n    this.props.history.push(redirectTo);\n    notification[notificationType]({\n      message: 'Point S Connect',\n      description: description\n    });\n  }\n\n  handleLogin() {\n    notification.success({\n      message: 'Point S Connect',\n      description: \"You're successfully logged in.\"\n    });\n    this.loadCurrentUser();\n    this.props.history.push(\"/\");\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return React.createElement(LoadingIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Layout, {\n      className: \"app-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(AppHeader, {\n      className: \"head\",\n      isAuthenticated: this.state.isAuthenticated,\n      currentUser: this.state.currentUser,\n      onLogout: this.handleLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Content, {\n      className: \"app-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/login\",\n      render: props => React.createElement(Login, Object.assign({\n        onLogin: this.handleLogin\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signup\",\n      component: Signup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/Home\",\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/users/:username\",\n      render: props => React.createElement(Profile, Object.assign({\n        isAuthenticated: this.state.isAuthenticated,\n        currentUser: this.state.currentUser\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      authenticated: this.state.isAuthenticated,\n      path: \"/\",\n      component: Home,\n      handleLogout: this.handleLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: NotFound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })))), React.createElement(Footer, {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Point S \\xA92019 Created by SETTAI, ZOUAID\"));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["C:\\Users\\ZDLaP\\Desktop\\ReactProject\\connect\\ReactJS\\points-connect\\src\\app\\App.js"],"names":["React","Component","Route","withRouter","Switch","getCurrentUser","ACCESS_TOKEN","Login","Signup","Profile","Home","AppHeader","NotFound","LoadingIndicator","PrivateRoute","Layout","notification","Content","Footer","App","constructor","props","state","currentUser","isAuthenticated","isLoading","handleLogout","bind","loadCurrentUser","handleLogin","config","placement","top","duration","setState","then","response","catch","error","componentDidMount","redirectTo","notificationType","description","localStorage","removeItem","history","push","message","success","render","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport '../assets/css/App.css';\r\nimport {\r\n  Route,\r\n  withRouter,\r\n  Switch\r\n} from 'react-router-dom';\r\n\r\nimport { getCurrentUser } from '../util/APIUtils';\r\nimport { ACCESS_TOKEN } from '../constants';\r\nimport \"../assets/css/App.css\"\r\nimport Login from '../views/Login';\r\nimport Signup from '../views/Signup';\r\nimport Profile from '../views/Profile';\r\nimport Home from '../views/Home';\r\nimport AppHeader from '../components/AppHeader';\r\nimport NotFound from '../components/NotFound';\r\nimport LoadingIndicator from '../components/LoadingIndicator';\r\nimport PrivateRoute from '../components/PrivateRoute';\r\n\r\nimport { Layout, notification } from 'antd';\r\nconst { Content } = Layout;\r\nconst Footer = Layout.Footer;\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentUser: null,\r\n      isAuthenticated: false,\r\n      isLoading: false\r\n    }\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n    this.loadCurrentUser = this.loadCurrentUser.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n   \r\n    notification.config({\r\n      placement: 'topRight',\r\n      top: 70,\r\n      duration: 3,\r\n    });    \r\n  }\r\n\r\n  loadCurrentUser() {\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    getCurrentUser()\r\n    .then(response => {\r\n      this.setState({\r\n        currentUser: response,\r\n        isAuthenticated: true,\r\n        isLoading: false\r\n      });\r\n    }).catch(error => {\r\n      this.setState({\r\n        isLoading: false\r\n      });  \r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadCurrentUser();\r\n  }\r\n\r\n  handleLogout(redirectTo=\"/\", notificationType=\"success\", description=\"You're successfully logged out.\") {\r\n    localStorage.removeItem(ACCESS_TOKEN);\r\n\r\n    this.setState({\r\n      currentUser: null,\r\n      isAuthenticated: false\r\n    });\r\n\r\n    this.props.history.push(redirectTo);\r\n    \r\n    notification[notificationType]({\r\n      message: 'Point S Connect',\r\n      description: description,\r\n    });\r\n  }\r\n\r\n  handleLogin() {\r\n    notification.success({\r\n      message: 'Point S Connect',\r\n      description: \"You're successfully logged in.\",\r\n    });\r\n    this.loadCurrentUser();\r\n    this.props.history.push(\"/\");\r\n  }\r\n\r\n  render() {\r\n    if(this.state.isLoading) {\r\n      return <LoadingIndicator />\r\n    }\r\n    return (\r\n        <Layout className=\"app-container\">\r\n          <AppHeader className=\"head\" isAuthenticated={this.state.isAuthenticated} \r\n            currentUser={this.state.currentUser} \r\n            onLogout={this.handleLogout} />\r\n\r\n          <Content className=\"app-content\">\r\n            <div className=\"container\">\r\n              <Switch>      \r\n                <Route path=\"/login\" \r\n                  render={(props) => <Login onLogin={this.handleLogin} {...props} />}></Route>\r\n                <Route path=\"/signup\" component={Signup}></Route>\r\n                <Route path=\"/Home\" component={Home}></Route>\r\n\r\n                <Route path=\"/users/:username\" \r\n                  render={(props) => <Profile isAuthenticated={this.state.isAuthenticated} currentUser={this.state.currentUser} {...props}  />}>\r\n                </Route>\r\n                <PrivateRoute authenticated={this.state.isAuthenticated} path=\"/\" component={Home} handleLogout={this.handleLogout}></PrivateRoute>\r\n                <Route component={NotFound}></Route>\r\n              </Switch>\r\n            </div>\r\n          </Content>\r\n          <Footer style={{ textAlign: 'center' }}>Point S ©2019 Created by SETTAI, ZOUAID</Footer>\r\n        </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(App);\r\n"]},"metadata":{},"sourceType":"module"}