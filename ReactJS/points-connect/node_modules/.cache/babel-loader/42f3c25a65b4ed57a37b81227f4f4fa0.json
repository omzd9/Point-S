{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZDLaP\\\\Desktop\\\\ReactProject\\\\connect\\\\ReactJS\\\\points-connect\\\\src\\\\app\\\\App.js\";\nimport React, { Component } from 'react';\nimport '../assets/css/App.css';\nimport { Route, withRouter, Switch } from 'react-router-dom';\nimport { getCurrentUser } from '../util/APIUtils';\nimport { ACCESS_TOKEN } from '../constants';\nimport Login from '../views/Login';\nimport Signup from '../views/Signup';\nimport Profile from '../views/Profile';\nimport Home from '../views/Home';\nimport AppHeader from '../components/AppHeader';\nimport NotFound from '../components/NotFound';\nimport LoadingIndicator from '../components/LoadingIndicator';\nimport PrivateRoute from '../components/PrivateRoute';\nimport { Layout, notification } from 'antd';\n/*const { Content } = Layout;\r\nconst Footer = Layout.Footer;\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentUser: null,\r\n      isAuthenticated: false,\r\n      isLoading: false\r\n    }\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n    this.loadCurrentUser = this.loadCurrentUser.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n\r\n    notification.config({\r\n      placement: 'topRight',\r\n      top: 70,\r\n      duration: 3,\r\n    });    \r\n  }\r\n\r\n  loadCurrentUser() {\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    getCurrentUser()\r\n    .then(response => {\r\n      this.setState({\r\n        currentUser: response,\r\n        isAuthenticated: true,\r\n        isLoading: false\r\n      });\r\n    }).catch(error => {\r\n      this.setState({\r\n        isLoading: false\r\n      });  \r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadCurrentUser();\r\n  }\r\n\r\n  handleLogout(redirectTo=\"/\", notificationType=\"success\", description=\"You're successfully logged out.\") {\r\n    localStorage.removeItem(ACCESS_TOKEN);\r\n\r\n    this.setState({\r\n      currentUser: null,\r\n      isAuthenticated: false\r\n    });\r\n\r\n    this.props.history.push(redirectTo);\r\n    \r\n    notification[notificationType]({\r\n      message: 'Point S Connect',\r\n      description: description,\r\n    });\r\n  }\r\n\r\n  handleLogin() {\r\n    notification.success({\r\n      message: 'Point S Connect',\r\n      description: \"You're successfully logged in.\",\r\n    });\r\n    this.loadCurrentUser();\r\n    this.props.history.push(\"/\");\r\n  }\r\n\r\n  render() {\r\n    if(this.state.isLoading) {\r\n      return <LoadingIndicator />\r\n    }\r\n    return (\r\n        <Layout className=\"app-container\">\r\n          <AppHeader isAuthenticated={this.state.isAuthenticated} \r\n            currentUser={this.state.currentUser} \r\n            onLogout={this.handleLogout} />\r\n\r\n          <Content className=\"app-content\">\r\n            <div className=\"container\">\r\n              <Switch>      \r\n                <Route path=\"/login\" \r\n                  render={(props) => <Login onLogin={this.handleLogin} {...props} />}></Route>\r\n                <Route path=\"/signup\" component={Signup}></Route>\r\n                <Route path=\"/users/:username\" \r\n                  render={(props) => <Profile isAuthenticated={this.state.isAuthenticated} currentUser={this.state.currentUser} {...props}  />}>\r\n                </Route>\r\n                <PrivateRoute authenticated={this.state.isAuthenticated} path=\"/\" component={Home} handleLogout={this.handleLogout}></PrivateRoute>\r\n                <Route component={NotFound}></Route>\r\n              </Switch>\r\n            </div>\r\n          </Content>\r\n          <Footer style={{ textAlign: 'center' }}>Point S ©2019 Created by SETTAI, ZOUAID</Footer>\r\n        </Layout>\r\n    );\r\n  }\r\n}*/\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Slid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }));\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["C:\\Users\\ZDLaP\\Desktop\\ReactProject\\connect\\ReactJS\\points-connect\\src\\app\\App.js"],"names":["React","Component","Route","withRouter","Switch","getCurrentUser","ACCESS_TOKEN","Login","Signup","Profile","Home","AppHeader","NotFound","LoadingIndicator","PrivateRoute","Layout","notification","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,uBAAP;AACA,SACEC,KADF,EAEEC,UAFF,EAGEC,MAHF,QAIO,kBAJP;AAMA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,YAAT,QAA6B,cAA7B;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,MAArC;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA,SAASC,GAAT,GAAe;AACb,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADF;AAKD;;AAED,eAAed,UAAU,CAACc,GAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\r\nimport '../assets/css/App.css';\r\nimport {\r\n  Route,\r\n  withRouter,\r\n  Switch\r\n} from 'react-router-dom';\r\n\r\nimport { getCurrentUser } from '../util/APIUtils';\r\nimport { ACCESS_TOKEN } from '../constants';\r\n\r\nimport Login from '../views/Login';\r\nimport Signup from '../views/Signup';\r\nimport Profile from '../views/Profile';\r\nimport Home from '../views/Home';\r\nimport AppHeader from '../components/AppHeader';\r\nimport NotFound from '../components/NotFound';\r\nimport LoadingIndicator from '../components/LoadingIndicator';\r\nimport PrivateRoute from '../components/PrivateRoute';\r\n\r\nimport { Layout, notification } from 'antd';\r\n/*const { Content } = Layout;\r\nconst Footer = Layout.Footer;\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentUser: null,\r\n      isAuthenticated: false,\r\n      isLoading: false\r\n    }\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n    this.loadCurrentUser = this.loadCurrentUser.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n\r\n    notification.config({\r\n      placement: 'topRight',\r\n      top: 70,\r\n      duration: 3,\r\n    });    \r\n  }\r\n\r\n  loadCurrentUser() {\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    getCurrentUser()\r\n    .then(response => {\r\n      this.setState({\r\n        currentUser: response,\r\n        isAuthenticated: true,\r\n        isLoading: false\r\n      });\r\n    }).catch(error => {\r\n      this.setState({\r\n        isLoading: false\r\n      });  \r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadCurrentUser();\r\n  }\r\n\r\n  handleLogout(redirectTo=\"/\", notificationType=\"success\", description=\"You're successfully logged out.\") {\r\n    localStorage.removeItem(ACCESS_TOKEN);\r\n\r\n    this.setState({\r\n      currentUser: null,\r\n      isAuthenticated: false\r\n    });\r\n\r\n    this.props.history.push(redirectTo);\r\n    \r\n    notification[notificationType]({\r\n      message: 'Point S Connect',\r\n      description: description,\r\n    });\r\n  }\r\n\r\n  handleLogin() {\r\n    notification.success({\r\n      message: 'Point S Connect',\r\n      description: \"You're successfully logged in.\",\r\n    });\r\n    this.loadCurrentUser();\r\n    this.props.history.push(\"/\");\r\n  }\r\n\r\n  render() {\r\n    if(this.state.isLoading) {\r\n      return <LoadingIndicator />\r\n    }\r\n    return (\r\n        <Layout className=\"app-container\">\r\n          <AppHeader isAuthenticated={this.state.isAuthenticated} \r\n            currentUser={this.state.currentUser} \r\n            onLogout={this.handleLogout} />\r\n\r\n          <Content className=\"app-content\">\r\n            <div className=\"container\">\r\n              <Switch>      \r\n                <Route path=\"/login\" \r\n                  render={(props) => <Login onLogin={this.handleLogin} {...props} />}></Route>\r\n                <Route path=\"/signup\" component={Signup}></Route>\r\n                <Route path=\"/users/:username\" \r\n                  render={(props) => <Profile isAuthenticated={this.state.isAuthenticated} currentUser={this.state.currentUser} {...props}  />}>\r\n                </Route>\r\n                <PrivateRoute authenticated={this.state.isAuthenticated} path=\"/\" component={Home} handleLogout={this.handleLogout}></PrivateRoute>\r\n                <Route component={NotFound}></Route>\r\n              </Switch>\r\n            </div>\r\n          </Content>\r\n          <Footer style={{ textAlign: 'center' }}>Point S ©2019 Created by SETTAI, ZOUAID</Footer>\r\n        </Layout>\r\n    );\r\n  }\r\n}*/\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n       <Slid/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);\r\n"]},"metadata":{},"sourceType":"module"}