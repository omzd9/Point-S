{"ast":null,"code":"import { API_BASE_URL, ACCESS_TOKEN } from '../constants';\n\nconst request = options => {\n  const headers = new Headers({\n    'Content-Type': 'application/json'\n  });\n\n  if (localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN));\n  }\n\n  const defaults = {\n    headers: headers\n  };\n  options = Object.assign({}, defaults, options);\n  return fetch(options.url, options).then(response => response.json().then(json => {\n    if (!response.ok) {\n      return Promise.reject(json);\n    }\n\n    return json;\n  }));\n};\n\nconst requestMultipart = options => {\n  const headers = new Headers({\n    mode: 'no-cors',\n    method: \"POST\"\n  });\n\n  if (localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN));\n  }\n\n  const defaults = {\n    headers: headers\n  };\n  options = Object.assign({}, defaults, options);\n  return fetch(options.url, options).then(response => response.json().then(json => {\n    if (!response.ok) {\n      return Promise.reject(json);\n    }\n\n    return json;\n  }));\n};\n\nexport function login(loginRequest) {\n  return request({\n    url: API_BASE_URL + \"/auth/signin\",\n    method: 'POST',\n    body: JSON.stringify(loginRequest)\n  });\n} //mine\n\nexport function createEvent(myEvent) {\n  return request({\n    url: API_BASE_URL + \"/Accueil/addEvent\",\n    method: 'POST',\n    body: JSON.stringify(myEvent)\n  });\n} //end\n\nexport function signup(signupRequest) {\n  return request({\n    url: API_BASE_URL + \"/auth/signup\",\n    method: 'POST',\n    body: JSON.stringify(signupRequest)\n  });\n}\nexport function checkUsernameAvailability(username) {\n  return request({\n    url: API_BASE_URL + \"/user/checkUsernameAvailability?username=\" + username,\n    method: 'GET'\n  });\n}\nexport function checkEmailAvailability(email) {\n  return request({\n    url: API_BASE_URL + \"/user/checkEmailAvailability?email=\" + email,\n    method: 'GET'\n  });\n}\nexport function getCurrentUser() {\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\n    return Promise.reject(\"No access token set.\");\n  }\n\n  return request({\n    url: API_BASE_URL + \"/user/me\",\n    method: 'GET'\n  });\n}\nexport function getUserProfile(username) {\n  return request({\n    url: API_BASE_URL + \"/users/\" + username,\n    method: 'GET'\n  });\n}","map":{"version":3,"sources":["C:\\Users\\ZDLaP\\Desktop\\ReactProject\\connect\\ReactJS\\points-connect\\src\\util\\APIUtils.js"],"names":["API_BASE_URL","ACCESS_TOKEN","request","options","headers","Headers","localStorage","getItem","append","defaults","Object","assign","fetch","url","then","response","json","ok","Promise","reject","requestMultipart","mode","method","login","loginRequest","body","JSON","stringify","createEvent","myEvent","signup","signupRequest","checkUsernameAvailability","username","checkEmailAvailability","email","getCurrentUser","getUserProfile"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,YAAvB,QAA2C,cAA3C;;AAEA,MAAMC,OAAO,GAAIC,OAAD,IAAa;AACzB,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY;AACxB,oBAAgB;AADQ,GAAZ,CAAhB;;AAIA,MAAGC,YAAY,CAACC,OAAb,CAAqBN,YAArB,CAAH,EAAuC;AACnCG,IAAAA,OAAO,CAACI,MAAR,CAAe,eAAf,EAAgC,YAAYF,YAAY,CAACC,OAAb,CAAqBN,YAArB,CAA5C;AACH;;AAED,QAAMQ,QAAQ,GAAG;AAACL,IAAAA,OAAO,EAAEA;AAAV,GAAjB;AACAD,EAAAA,OAAO,GAAGO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,QAAlB,EAA4BN,OAA5B,CAAV;AAEA,SAAOS,KAAK,CAACT,OAAO,CAACU,GAAT,EAAcV,OAAd,CAAL,CACMW,IADN,CACWC,QAAQ,IACVA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBE,IAAI,IAAI;AACzB,QAAG,CAACD,QAAQ,CAACE,EAAb,EAAiB;AACb,aAAOC,OAAO,CAACC,MAAR,CAAeH,IAAf,CAAP;AACH;;AACD,WAAOA,IAAP;AACH,GALD,CAFT,CAAP;AASH,CArBD;;AAuBA,MAAMI,gBAAgB,GAAIjB,OAAD,IAAa;AAGlC,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY;AACxBgB,IAAAA,IAAI,EAAE,SADkB;AAE1BC,IAAAA,MAAM,EAAE;AAFkB,GAAZ,CAAhB;;AAIA,MAAGhB,YAAY,CAACC,OAAb,CAAqBN,YAArB,CAAH,EAAuC;AACnCG,IAAAA,OAAO,CAACI,MAAR,CAAe,eAAf,EAAgC,YAAYF,YAAY,CAACC,OAAb,CAAqBN,YAArB,CAA5C;AACH;;AAED,QAAMQ,QAAQ,GAAG;AAACL,IAAAA,OAAO,EAAEA;AAAV,GAAjB;AACAD,EAAAA,OAAO,GAAGO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,QAAlB,EAA4BN,OAA5B,CAAV;AAEA,SAAOS,KAAK,CAACT,OAAO,CAACU,GAAT,EAAcV,OAAd,CAAL,CACMW,IADN,CACWC,QAAQ,IACVA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBE,IAAI,IAAI;AACzB,QAAG,CAACD,QAAQ,CAACE,EAAb,EAAiB;AACb,aAAOC,OAAO,CAACC,MAAR,CAAeH,IAAf,CAAP;AACH;;AACD,WAAOA,IAAP;AACH,GALD,CAFT,CAAP;AASH,CAvBD;;AAyBA,OAAO,SAASO,KAAT,CAAeC,YAAf,EAA6B;AAChC,SAAOtB,OAAO,CAAC;AACXW,IAAAA,GAAG,EAAEb,YAAY,GAAG,cADT;AAEXsB,IAAAA,MAAM,EAAE,MAFG;AAGXG,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,YAAf;AAHK,GAAD,CAAd;AAKH,C,CACO;;AACR,OAAO,SAASI,WAAT,CAAqBC,OAArB,EAA8B;AAEjC,SAAO3B,OAAO,CAAC;AACXW,IAAAA,GAAG,EAAEb,YAAY,GAAG,mBADT;AAEXsB,IAAAA,MAAM,EAAE,MAFG;AAGXG,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeE,OAAf;AAHK,GAAD,CAAd;AAKH,C,CACO;;AACR,OAAO,SAASC,MAAT,CAAgBC,aAAhB,EAA+B;AAClC,SAAO7B,OAAO,CAAC;AACXW,IAAAA,GAAG,EAAEb,YAAY,GAAG,cADT;AAEXsB,IAAAA,MAAM,EAAE,MAFG;AAGXG,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeI,aAAf;AAHK,GAAD,CAAd;AAKH;AAED,OAAO,SAASC,yBAAT,CAAmCC,QAAnC,EAA6C;AAChD,SAAO/B,OAAO,CAAC;AACXW,IAAAA,GAAG,EAAEb,YAAY,GAAG,2CAAf,GAA6DiC,QADvD;AAEXX,IAAAA,MAAM,EAAE;AAFG,GAAD,CAAd;AAIH;AAED,OAAO,SAASY,sBAAT,CAAgCC,KAAhC,EAAuC;AAC1C,SAAOjC,OAAO,CAAC;AACXW,IAAAA,GAAG,EAAEb,YAAY,GAAG,qCAAf,GAAuDmC,KADjD;AAEXb,IAAAA,MAAM,EAAE;AAFG,GAAD,CAAd;AAIH;AAGD,OAAO,SAASc,cAAT,GAA0B;AAC7B,MAAG,CAAC9B,YAAY,CAACC,OAAb,CAAqBN,YAArB,CAAJ,EAAwC;AACpC,WAAOiB,OAAO,CAACC,MAAR,CAAe,sBAAf,CAAP;AACH;;AAED,SAAOjB,OAAO,CAAC;AACXW,IAAAA,GAAG,EAAEb,YAAY,GAAG,UADT;AAEXsB,IAAAA,MAAM,EAAE;AAFG,GAAD,CAAd;AAIH;AAED,OAAO,SAASe,cAAT,CAAwBJ,QAAxB,EAAkC;AACrC,SAAO/B,OAAO,CAAC;AACXW,IAAAA,GAAG,EAAEb,YAAY,GAAG,SAAf,GAA2BiC,QADrB;AAEXX,IAAAA,MAAM,EAAE;AAFG,GAAD,CAAd;AAIH","sourcesContent":["import { API_BASE_URL, ACCESS_TOKEN } from '../constants';\r\n\r\nconst request = (options) => {\r\n    const headers = new Headers({\r\n        'Content-Type': 'application/json',\r\n    })\r\n    \r\n    if(localStorage.getItem(ACCESS_TOKEN)) {\r\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\r\n    }\r\n\r\n    const defaults = {headers: headers};\r\n    options = Object.assign({}, defaults, options);\r\n\r\n    return fetch(options.url, options)\r\n                .then(response => \r\n                    response.json().then(json => {\r\n                        if(!response.ok) {\r\n                            return Promise.reject(json);\r\n                        }\r\n                        return json;\r\n                    })\r\n                );\r\n};\r\n\r\nconst requestMultipart = (options) => {\r\n    \r\n    \r\n    const headers = new Headers({\r\n        mode: 'no-cors',\r\n      method: \"POST\",\r\n    });\r\n    if(localStorage.getItem(ACCESS_TOKEN)) {\r\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\r\n    }\r\n\r\n    const defaults = {headers: headers};\r\n    options = Object.assign({}, defaults, options);\r\n\r\n    return fetch(options.url, options)\r\n                .then(response => \r\n                    response.json().then(json => {\r\n                        if(!response.ok) {\r\n                            return Promise.reject(json);\r\n                        }\r\n                        return json;\r\n                    })\r\n                );\r\n};\r\n\r\nexport function login(loginRequest) {\r\n    return request({\r\n        url: API_BASE_URL + \"/auth/signin\",\r\n        method: 'POST',\r\n        body: JSON.stringify(loginRequest)\r\n    });\r\n}\r\n        //mine\r\nexport function createEvent(myEvent) {\r\n    \r\n    return request({\r\n        url: API_BASE_URL + \"/Accueil/addEvent\",\r\n        method: 'POST',\r\n        body: JSON.stringify(myEvent)\r\n    });\r\n}\r\n        //end\r\nexport function signup(signupRequest) {\r\n    return request({\r\n        url: API_BASE_URL + \"/auth/signup\",\r\n        method: 'POST',\r\n        body: JSON.stringify(signupRequest)\r\n    });\r\n}\r\n\r\nexport function checkUsernameAvailability(username) {\r\n    return request({\r\n        url: API_BASE_URL + \"/user/checkUsernameAvailability?username=\" + username,\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\nexport function checkEmailAvailability(email) {\r\n    return request({\r\n        url: API_BASE_URL + \"/user/checkEmailAvailability?email=\" + email,\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\n\r\nexport function getCurrentUser() {\r\n    if(!localStorage.getItem(ACCESS_TOKEN)) {\r\n        return Promise.reject(\"No access token set.\");\r\n    }\r\n\r\n    return request({\r\n        url: API_BASE_URL + \"/user/me\",\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\nexport function getUserProfile(username) {\r\n    return request({\r\n        url: API_BASE_URL + \"/users/\" + username,\r\n        method: 'GET'\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}