{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZDLaP\\\\Desktop\\\\ReactProject\\\\connect\\\\ReactJS\\\\points-connect\\\\src\\\\views\\\\Profile.jsx\";\nimport React, { Component } from 'react';\nimport { getUserProfile } from '../util/APIUtils';\nimport { Avatar } from 'antd';\nimport { getAvatarColor } from '../util/Colors';\nimport LoadingIndicator from '../components/LoadingIndicator';\nimport '../assets/css/Profile.css';\nimport NotFound from '../components/NotFound';\nimport ServerError from '../components/ServerError';\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      isLoading: false\n    };\n    this.loadUserProfile = this.loadUserProfile.bind(this);\n  }\n\n  loadUserProfile(username) {\n    this.setState({\n      isLoading: true\n    });\n    getUserProfile(username).then(response => {\n      this.setState({\n        user: response,\n        isLoading: false\n      });\n    }).catch(error => {\n      if (error.status === 404) {\n        this.setState({\n          notFound: true,\n          isLoading: false\n        });\n      } else {\n        this.setState({\n          serverError: true,\n          isLoading: false\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    const username = this.props.match.params.username;\n    this.loadUserProfile(username);\n  }\n\n  componentDidUpdate(nextProps) {\n    if (this.props.match.params.username !== nextProps.match.params.username) {\n      this.loadUserProfile(nextProps.match.params.username);\n    }\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return React.createElement(LoadingIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.notFound) {\n      return React.createElement(NotFound, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.serverError) {\n      return React.createElement(ServerError, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.user ? React.createElement(\"div\", {\n      className: \"user-profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user-avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      className: \"user-avatar-circle\",\n      style: {\n        backgroundColor: getAvatarColor(this.state.user.name)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.user.name[0].toUpperCase())), React.createElement(\"div\", {\n      className: \"user-summary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"full-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.user.name), React.createElement(\"div\", {\n      className: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"@\", this.state.user.username)))) : null);\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["C:\\Users\\ZDLaP\\Desktop\\ReactProject\\connect\\ReactJS\\points-connect\\src\\views\\Profile.jsx"],"names":["React","Component","getUserProfile","Avatar","getAvatarColor","LoadingIndicator","NotFound","ServerError","Profile","constructor","props","state","user","isLoading","loadUserProfile","bind","username","setState","then","response","catch","error","status","notFound","serverError","componentDidMount","match","params","componentDidUpdate","nextProps","render","backgroundColor","name","toUpperCase"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { getUserProfile } from '../util/APIUtils';\r\nimport { Avatar } from 'antd';\r\nimport { getAvatarColor } from '../util/Colors';\r\nimport LoadingIndicator  from '../components/LoadingIndicator';\r\nimport '../assets/css/Profile.css';\r\nimport NotFound from '../components/NotFound';\r\nimport ServerError from '../components/ServerError';\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: null,\r\n            isLoading: false\r\n        }\r\n        this.loadUserProfile = this.loadUserProfile.bind(this);\r\n    }\r\n\r\n    loadUserProfile(username) {\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        getUserProfile(username)\r\n        .then(response => {\r\n            this.setState({\r\n                user: response,\r\n                isLoading: false\r\n            });\r\n        }).catch(error => {\r\n            if(error.status === 404) {\r\n                this.setState({\r\n                    notFound: true,\r\n                    isLoading: false\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    serverError: true,\r\n                    isLoading: false\r\n                });        \r\n            }\r\n        });        \r\n    }\r\n      \r\n    componentDidMount() {\r\n        const username = this.props.match.params.username;\r\n        this.loadUserProfile(username);\r\n    }\r\n\r\n    componentDidUpdate(nextProps) {\r\n        if(this.props.match.params.username !== nextProps.match.params.username) {\r\n            this.loadUserProfile(nextProps.match.params.username);\r\n        }        \r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoading) {\r\n            return <LoadingIndicator />;\r\n        }\r\n\r\n        if(this.state.notFound) {\r\n            return <NotFound />;\r\n        }\r\n\r\n        if(this.state.serverError) {\r\n            return <ServerError />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"profile\">\r\n                { \r\n                    this.state.user ? (\r\n                        <div className=\"user-profile\">\r\n                            <div className=\"user-details\">\r\n                                <div className=\"user-avatar\">\r\n                                    <Avatar className=\"user-avatar-circle\" style={{ backgroundColor: getAvatarColor(this.state.user.name)}}>\r\n                                        {this.state.user.name[0].toUpperCase()}\r\n                                    </Avatar>\r\n                                </div>\r\n                                <div className=\"user-summary\">\r\n                                    <div className=\"full-name\">{this.state.user.name}</div>\r\n                                    <div className=\"username\">@{this.state.user.username}</div>\r\n                                </div>\r\n                            </div>\r\n                             \r\n                        </div>  \r\n                    ): null               \r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}