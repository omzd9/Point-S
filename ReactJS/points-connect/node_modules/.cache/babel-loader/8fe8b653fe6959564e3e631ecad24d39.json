{"ast":null,"code":"import { API_BASE_URL, ACCESS_TOKEN } from '../constants';\n\nconst request = options => {\n  const headers = new Headers({\n    'Content-Type': 'application/json'\n  });\n\n  if (localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN));\n  }\n\n  const defaults = {\n    headers: headers\n  };\n  options = Object.assign({}, defaults, options);\n  return fetch(options.url, options).then(response => response.json().then(json => {\n    if (!response.ok) {\n      return Promise.reject(json);\n    }\n\n    return json;\n  }));\n};\n\nconst requestMultipart = options => {\n  const headers = new Headers({\n    'Content-Type': 'multipart/form-data'\n  });\n\n  if (localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN));\n  }\n\n  const defaults = {\n    headers: headers\n  };\n  options = Object.assign({}, defaults, options);\n  return fetch(options.url, options).then(response => response.json().then(json => {\n    if (!response.ok) {\n      return Promise.reject(json);\n    }\n\n    return json;\n  }));\n};\n\nexport function login(loginRequest) {\n  return request({\n    url: API_BASE_URL + \"/auth/signin\",\n    method: 'POST',\n    body: JSON.stringify(loginRequest)\n  });\n} //mine\n\nexport function createEvent(myEvent) {\n  const data = {\n    'title': myEvent.title,\n    'description': myEvent.description,\n    'file': myEvent.file\n  };\n  const option = {\n    mode: 'no-cors',\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      \"Accept\": \"application/json\",\n      \"type\": \"formData\"\n    },\n    body: JSON.stringify(data)\n  };\n  return fetch(API_BASE_URL + \"/Accueil/addEvent\", option).then(response => response.json().then(json => {\n    if (!response.ok) {\n      return Promise.reject(json);\n    }\n\n    return json;\n  }));\n} //end\n\nexport function signup(signupRequest) {\n  return request({\n    url: API_BASE_URL + \"/auth/signup\",\n    method: 'POST',\n    body: JSON.stringify(signupRequest)\n  });\n}\nexport function checkUsernameAvailability(username) {\n  return request({\n    url: API_BASE_URL + \"/user/checkUsernameAvailability?username=\" + username,\n    method: 'GET'\n  });\n}\nexport function checkEmailAvailability(email) {\n  return request({\n    url: API_BASE_URL + \"/user/checkEmailAvailability?email=\" + email,\n    method: 'GET'\n  });\n}\nexport function getCurrentUser() {\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\n    return Promise.reject(\"No access token set.\");\n  }\n\n  return request({\n    url: API_BASE_URL + \"/user/me\",\n    method: 'GET'\n  });\n}\nexport function getUserProfile(username) {\n  return request({\n    url: API_BASE_URL + \"/users/\" + username,\n    method: 'GET'\n  });\n}","map":{"version":3,"sources":["C:\\Users\\ZDLaP\\Desktop\\ReactProject\\connect\\ReactJS\\points-connect\\src\\util\\APIUtils.js"],"names":["API_BASE_URL","ACCESS_TOKEN","request","options","headers","Headers","localStorage","getItem","append","defaults","Object","assign","fetch","url","then","response","json","ok","Promise","reject","requestMultipart","login","loginRequest","method","body","JSON","stringify","createEvent","myEvent","data","title","description","file","option","mode","signup","signupRequest","checkUsernameAvailability","username","checkEmailAvailability","email","getCurrentUser","getUserProfile"],"mappings":"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","sourcesContent":["import { API_BASE_URL, ACCESS_TOKEN } from '../constants';\r\n\r\nconst request = (options) => {\r\n    const headers = new Headers({\r\n        'Content-Type': 'application/json',\r\n    })\r\n    \r\n    if(localStorage.getItem(ACCESS_TOKEN)) {\r\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\r\n    }\r\n\r\n    const defaults = {headers: headers};\r\n    options = Object.assign({}, defaults, options);\r\n\r\n    return fetch(options.url, options)\r\n                .then(response => \r\n                    response.json().then(json => {\r\n                        if(!response.ok) {\r\n                            return Promise.reject(json);\r\n                        }\r\n                        return json;\r\n                    })\r\n                );\r\n};\r\n\r\nconst requestMultipart = (options) => {\r\n    const headers = new Headers({\r\n        'Content-Type': 'multipart/form-data',\r\n    })\r\n    \r\n    if(localStorage.getItem(ACCESS_TOKEN)) {\r\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\r\n    }\r\n\r\n    const defaults = {headers: headers};\r\n    options = Object.assign({}, defaults, options);\r\n\r\n    return fetch(options.url, options)\r\n                .then(response => \r\n                    response.json().then(json => {\r\n                        if(!response.ok) {\r\n                            return Promise.reject(json);\r\n                        }\r\n                        return json;\r\n                    })\r\n                );\r\n};\r\n\r\nexport function login(loginRequest) {\r\n    return request({\r\n        url: API_BASE_URL + \"/auth/signin\",\r\n        method: 'POST',\r\n        body: JSON.stringify(loginRequest)\r\n    });\r\n}\r\n        //mine\r\nexport function createEvent(myEvent) {\r\n    const data = {\r\n        'title':myEvent.title,\r\n        'description':myEvent.description,\r\n        'file' : myEvent.file,\r\n    };\r\n    const option={\r\n        mode: 'no-cors',\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          \"Accept\": \"application/json\",\r\n          \"type\": \"formData\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      };\r\n  \r\n    return fetch(API_BASE_URL + \"/Accueil/addEvent\", option)\r\n    .then(response => \r\n        response.json().then(json => {\r\n            if(!response.ok) {\r\n                return Promise.reject(json);\r\n            }\r\n            return json;\r\n        })\r\n    );\r\n}\r\n        //end\r\nexport function signup(signupRequest) {\r\n    return request({\r\n        url: API_BASE_URL + \"/auth/signup\",\r\n        method: 'POST',\r\n        body: JSON.stringify(signupRequest)\r\n    });\r\n}\r\n\r\nexport function checkUsernameAvailability(username) {\r\n    return request({\r\n        url: API_BASE_URL + \"/user/checkUsernameAvailability?username=\" + username,\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\nexport function checkEmailAvailability(email) {\r\n    return request({\r\n        url: API_BASE_URL + \"/user/checkEmailAvailability?email=\" + email,\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\n\r\nexport function getCurrentUser() {\r\n    if(!localStorage.getItem(ACCESS_TOKEN)) {\r\n        return Promise.reject(\"No access token set.\");\r\n    }\r\n\r\n    return request({\r\n        url: API_BASE_URL + \"/user/me\",\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\nexport function getUserProfile(username) {\r\n    return request({\r\n        url: API_BASE_URL + \"/users/\" + username,\r\n        method: 'GET'\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}