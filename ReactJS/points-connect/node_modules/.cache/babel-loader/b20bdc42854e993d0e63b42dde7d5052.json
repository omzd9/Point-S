{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZDLaP\\\\Desktop\\\\ReactProject\\\\connect\\\\ReactJS\\\\points-connect\\\\src\\\\views\\\\addPromo.jsx\";\nimport React, { Component } from 'react';\nimport '../assets/css/addEvent.css';\nimport { createPromo } from '../util/APIUtils';\nimport { Form, Input, DatePicker, Button, notification } from 'antd';\nconst FormItem = Form.Item;\n\nclass addPromo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: {\n        value: ''\n      },\n      date: {\n        value: ''\n      }\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.isFormInvalid = this.isFormInvalid.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.FileUploadchange = this.FileUploadchange.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const addPromo = {\n      date: this.state.date.valueString,\n      file: this.state.file.content\n    };\n    createPromo(addPromo).then(response => {\n      notification.success({\n        message: 'Polling App',\n        description: \"Promotion successfully has been added !\"\n      });\n      this.props.history.push(\"/CreatePromo\");\n      this.setState({\n        'file': {\n          'value': ''\n        },\n        'date': {\n          'value': ''\n        }\n      });\n    }).catch(error => {\n      notification.error({\n        message: 'Polling App',\n        description: error.message || 'Sorry! Something went wrong. Please try again!'\n      });\n    });\n  }\n\n  isFormInvalid() {\n    return !(this.state.file.validateStatus === true && this.state.date.validateStatus === true);\n  }\n\n  onChangeDate(date, dateString) {\n    if (dateString.trim() == \"\") {\n      this.setState({\n        'date': {\n          'value': null,\n          'valueString': null,\n          'validateStatus': false,\n          'errorMsg': 'Empty value'\n        }\n      });\n    } else {\n      this.setState({\n        'date': {\n          'value': date,\n          'valueString': dateString,\n          'validateStatus': true,\n          'errorMsg': null\n        }\n      });\n    }\n  }\n\n  FileUploadchange(event) {\n    if (!event.target.value) {\n      this.setState({\n        'file': {\n          'value': null,\n          'content': null,\n          'validateStatus': false,\n          'errorMsg': \"failed to upload\"\n        }\n      });\n    } else {\n      this.setState({\n        'file': {\n          'value': event.target.value,\n          'validateStatus': true,\n          'content': event.target.files[0],\n          'errorMsg': \"successfully uploaded\"\n        }\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"addEvent-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Nouvelle promotion :\"), React.createElement(\"div\", {\n      className: \"addEvent-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"addEvent-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(FormItem, {\n      label: \"Date de Cl\\xF4ture :\",\n      validateStatus: this.state.date.validateStatus,\n      help: this.state.date.errorMsg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      size: \"large\",\n      name: \"date\",\n      value: this.state.date.value,\n      onChange: this.onChangeDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(FormItem, {\n      label: \"Image :\",\n      validateStatus: this.state.file.validateStatus,\n      help: this.state.file.errorMsg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      className: \".addEvent-form-Input\",\n      accept: \"image/png, image/jpeg, image/jpg\",\n      value: this.state.file.value,\n      onChange: this.FileUploadchange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      size: \"large\",\n      className: \"addEvent-form-button\",\n      disabled: this.isFormInvalid(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Confirmation\")))));\n  }\n\n}\n\nexport default addPromo;","map":{"version":3,"sources":["C:\\Users\\ZDLaP\\Desktop\\ReactProject\\connect\\ReactJS\\points-connect\\src\\views\\addPromo.jsx"],"names":["React","Component","createPromo","Form","Input","DatePicker","Button","notification","FormItem","Item","addPromo","constructor","props","state","file","value","date","handleSubmit","bind","isFormInvalid","onChangeDate","FileUploadchange","event","preventDefault","valueString","content","then","response","success","message","description","history","push","setState","catch","error","validateStatus","dateString","trim","target","files","render","errorMsg"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,4BAAP;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,EAAiCC,MAAjC,EAAwCC,YAAxC,QAA4D,MAA5D;AACA,MAAMC,QAAQ,GAAGL,IAAI,CAACM,IAAtB;;AAEA,MAAMC,QAAN,SAAuBT,SAAvB,CAAiC;AAC7BU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAETC,MAAAA,IAAI,EAAE;AACFC,QAAAA,KAAK,EAAE;AADL,OAFG;AAMTC,MAAAA,IAAI,EAAE;AACFD,QAAAA,KAAK,EAAE;AADL;AANG,KAAb;AAaA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKE,YAAL,GAAkB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAAlB;AACA,SAAKG,gBAAL,GAAsB,KAAKA,gBAAL,CAAsBH,IAAtB,CAA2B,IAA3B,CAAtB;AAGH;;AAIDD,EAAAA,YAAY,CAACK,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMb,QAAQ,GAAG;AACbM,MAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG,IAAX,CAAgBQ,WADT;AAEbV,MAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAAX,CAAgBW;AAFT,KAAjB;AAIAvB,IAAAA,WAAW,CAACQ,QAAD,CAAX,CACCgB,IADD,CACMC,QAAQ,IAAI;AACdpB,MAAAA,YAAY,CAACqB,OAAb,CAAqB;AACjBC,QAAAA,OAAO,EAAE,aADQ;AAEjBC,QAAAA,WAAW,EAAE;AAFI,OAArB;AAIA,WAAKlB,KAAL,CAAWmB,OAAX,CAAmBC,IAAnB,CAAwB,cAAxB;AACA,WAAKC,QAAL,CAAc;AAEN,gBAAQ;AACJ,mBAAS;AADL,SAFF;AAKN,gBAAQ;AACJ,mBAAS;AADL;AALF,OAAd;AAUH,KAjBD,EAiBGC,KAjBH,CAiBSC,KAAK,IAAI;AACd5B,MAAAA,YAAY,CAAC4B,KAAb,CAAmB;AACfN,QAAAA,OAAO,EAAE,aADM;AAEfC,QAAAA,WAAW,EAAEK,KAAK,CAACN,OAAN,IAAiB;AAFf,OAAnB;AAIH,KAtBD;AAwBH;;AAGDV,EAAAA,aAAa,GAAG;AACZ,WAAO,EACH,KAAKN,KAAL,CAAWC,IAAX,CAAgBsB,cAAhB,KAAmC,IAAnC,IACE,KAAKvB,KAAL,CAAWG,IAAX,CAAgBoB,cAAhB,KAAmC,IAFlC,CAAP;AAKH;;AACFhB,EAAAA,YAAY,CAACJ,IAAD,EAAOqB,UAAP,EAAmB;AAC9B,QAAGA,UAAU,CAACC,IAAX,MAAmB,EAAtB,EACA;AACQ,WAAKL,QAAL,CAAc;AACV,gBAAS;AACT,mBAAU,IADD;AAET,yBAAc,IAFL;AAGT,4BAAkB,KAHT;AAIT,sBAAY;AAJH;AADC,OAAd;AAQP,KAVD,MAWI;AACA,WAAKA,QAAL,CAAc;AACV,gBAAS;AACT,mBAAUjB,IADD;AAET,yBAAcqB,UAFL;AAGT,4BAAkB,IAHT;AAIT,sBAAY;AAJH;AADC,OAAd;AAQH;AAED;;AACDhB,EAAAA,gBAAgB,CAACC,KAAD,EAAO;AACpB,QAAG,CAACA,KAAK,CAACiB,MAAN,CAAaxB,KAAjB,EACA;AACE,WAAKkB,QAAL,CAAc;AACV,gBAAS;AACL,mBAAU,IADL;AAEL,qBAAU,IAFL;AAGL,4BAAkB,KAHb;AAIL,sBAAY;AAJP;AADC,OAAd;AASH,KAXC,MAYI;AACF,WAAKA,QAAL,CAAc;AACV,gBAAS;AACL,mBAAUX,KAAK,CAACiB,MAAN,CAAaxB,KADlB;AAEL,4BAAkB,IAFb;AAGL,qBAAUO,KAAK,CAACiB,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAHL;AAIL,sBAAY;AAJP;AADC,OAAd;AAUC;AAGL;;AAEAC,EAAAA,MAAM,GAAG;AAEL,WACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKxB,YAArB;AAAmC,MAAA,SAAS,EAAC,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,QAAD;AACI,MAAA,KAAK,EAAC,sBADV;AAEI,MAAA,cAAc,EAAE,KAAKJ,KAAL,CAAWG,IAAX,CAAgBoB,cAFpC;AAGI,MAAA,IAAI,EAAE,KAAKvB,KAAL,CAAWG,IAAX,CAAgB0B,QAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKO,oBAAC,UAAD;AACC,MAAA,IAAI,EAAC,OADN;AAEC,MAAA,IAAI,EAAC,MAFN;AAGC,MAAA,KAAK,EAAE,KAAK7B,KAAL,CAAWG,IAAX,CAAgBD,KAHxB;AAKC,MAAA,QAAQ,EAAE,KAAKK,YALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALP,CAFJ,EAeI,oBAAC,QAAD;AACI,MAAA,KAAK,EAAC,SADV;AAEI,MAAA,cAAc,EAAE,KAAKP,KAAL,CAAWC,IAAX,CAAgBsB,cAFpC;AAGI,MAAA,IAAI,EAAE,KAAKvB,KAAL,CAAWC,IAAX,CAAgB4B,QAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI;AACQ,MAAA,IAAI,EAAC,MADb;AAEQ,MAAA,SAAS,EAAC,sBAFlB;AAGQ,MAAA,MAAM,EAAC,kCAHf;AAIQ,MAAA,KAAK,EAAE,KAAK7B,KAAL,CAAWC,IAAX,CAAgBC,KAJ/B;AAKQ,MAAA,QAAQ,EAAE,KAAKM,gBALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAfJ,EA6BI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AACI,MAAA,QAAQ,EAAC,QADb;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,SAAS,EAAC,sBAHd;AAII,MAAA,QAAQ,EAAE,KAAKF,aAAL,EAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CA7BJ,CADJ,CAFJ,CADJ;AA6CH;;AAtK4B;;AA2KjC,eAAeT,QAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport '../assets/css/addEvent.css';\r\nimport { createPromo } from '../util/APIUtils';\r\n\r\nimport { Form, Input, DatePicker,Button,notification } from 'antd';\r\nconst FormItem = Form.Item;\r\n\r\nclass addPromo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           \r\n            file: {\r\n                value: ''\r\n            },\r\n           \r\n            date: {\r\n                value: ''\r\n            },\r\n           \r\n        }\r\n      \r\n      \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.isFormInvalid = this.isFormInvalid.bind(this);\r\n        this.onChangeDate=this.onChangeDate.bind(this);\r\n        this.FileUploadchange=this.FileUploadchange.bind(this);\r\n       \r\n          \r\n    }\r\n\r\n   \r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const addPromo = {\r\n            date: this.state.date.valueString,\r\n            file: this.state.file.content,\r\n        };\r\n        createPromo(addPromo)\r\n        .then(response => {\r\n            notification.success({\r\n                message: 'Polling App',\r\n                description: \"Promotion successfully has been added !\",\r\n            });          \r\n            this.props.history.push(\"/CreatePromo\");\r\n            this.setState({\r\n                   \r\n                    'file': {\r\n                        'value': ''\r\n                            },\r\n                    'date': {\r\n                        'value': ''\r\n                        },\r\n                });\r\n            \r\n        }).catch(error => {\r\n            notification.error({\r\n                message: 'Polling App',\r\n                description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n            });\r\n        });\r\n        \r\n    }\r\n\r\n\r\n    isFormInvalid() {\r\n        return !(\r\n            this.state.file.validateStatus === true \r\n           && this.state.date.validateStatus === true\r\n           \r\n        );\r\n    }\r\n   onChangeDate(date, dateString) {\r\n    if(dateString.trim()==\"\")\r\n    {\r\n            this.setState({\r\n                'date' : {\r\n                'value' : null,\r\n                'valueString':null,\r\n                'validateStatus': false,\r\n                'errorMsg': 'Empty value',\r\n                },\r\n            });\r\n    }\r\n    else{\r\n        this.setState({\r\n            'date' : {\r\n            'value' : date,\r\n            'valueString':dateString,\r\n            'validateStatus': true,\r\n            'errorMsg': null,\r\n            },\r\n        });\r\n    }\r\n     \r\n   }\r\n   FileUploadchange(event){\r\n      if(!event.target.value)\r\n      {\r\n        this.setState({\r\n            'file' : {\r\n                'value' : null,\r\n                'content':null,\r\n                'validateStatus': false,\r\n                'errorMsg': \"failed to upload\",\r\n               \r\n            }\r\n        });\r\n    }\r\n      else{\r\n        this.setState({\r\n            'file' : {\r\n                'value' : event.target.value,\r\n                'validateStatus': true,\r\n                'content':event.target.files[0],\r\n                'errorMsg': \"successfully uploaded\",\r\n               \r\n            }\r\n      });\r\n        \r\n        }\r\n\r\n        \r\n   }\r\n   \r\n    render() {\r\n  \r\n        return (\r\n            <div className=\"addEvent-container\">\r\n                <h1 className=\"page-title\">Nouvelle promotion :</h1>\r\n                <div className=\"addEvent-content\">\r\n                    <Form onSubmit={this.handleSubmit} className=\"addEvent-form\">\r\n                       \r\n                        <FormItem \r\n                            label=\"Date de Clôture :\"\r\n                            validateStatus={this.state.date.validateStatus}\r\n                            help={this.state.date.errorMsg}>\r\n                          \r\n                               <DatePicker \r\n                                size=\"large\"\r\n                                name=\"date\"                \r\n                                value={this.state.date.value}\r\n                              \r\n                                onChange={this.onChangeDate} />\r\n                               \r\n                        </FormItem>\r\n                        <FormItem \r\n                            label=\"Image :\"\r\n                            validateStatus={this.state.file.validateStatus}\r\n                            help={this.state.file.errorMsg}>\r\n                           \r\n                            <input \r\n                                    type=\"file\"\r\n                                    className=\".addEvent-form-Input\"\r\n                                    accept=\"image/png, image/jpeg, image/jpg\"\r\n                                    value={this.state.file.value} \r\n                                    onChange={this.FileUploadchange} /> \r\n                        </FormItem>\r\n                      \r\n                        \r\n                        <FormItem>\r\n                            <Button type=\"primary\" \r\n                                htmlType=\"submit\" \r\n                                size=\"large\" \r\n                                className=\"addEvent-form-button\"\r\n                                disabled={this.isFormInvalid()}>Confirmation</Button>\r\n                            \r\n                        </FormItem>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n  \r\n   }\r\n\r\nexport default addPromo;"]},"metadata":{},"sourceType":"module"}