{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\ZDLaP\\\\Desktop\\\\ReactProject\\\\connect\\\\ReactJS\\\\points-connect\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\ZDLaP\\\\Desktop\\\\ReactProject\\\\connect\\\\ReactJS\\\\points-connect\\\\src\\\\views\\\\addEvent.jsx\";\nimport React, { Component } from 'react';\nimport '../assets/css/Signup.css';\nimport { Link } from 'react-router-dom';\nimport { Form, Input, DatePicker, Button, Upload, Icon } from 'antd';\nconst FormItem = Form.Item;\n\nclass addEvent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validateContenu = content => {};\n\n    this.validateDate = email => {};\n\n    this.validateDescription = desc => {};\n\n    this.state = {\n      title: {\n        value: ''\n      },\n      file: {\n        value: ''\n      },\n      content: {\n        value: ''\n      },\n      date: {\n        value: ''\n      },\n      description: {\n        value: ''\n      }\n    };\n    const config = {\n      rules: [{\n        type: 'object',\n        required: true,\n        message: 'Please select time!'\n      }]\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.isFormInvalid = this.isFormInvalid.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    const AreaText = {\n      rows: '5'\n    };\n  }\n\n  handleInputChange(event, validationFun) {\n    const target = event.target;\n    const inputName = target.name;\n    const inputValue = target.value;\n    this.setState({\n      [inputName]: _objectSpread({\n        value: inputValue\n      }, validationFun(inputValue))\n    });\n  }\n\n  handleSubmit(event) {}\n\n  isFormInvalid() {\n    return !(this.state.description.validateStatus === 'success' && this.state.file.validateStatus === 'success');\n  }\n\n  onChangeDate(date, dateString) {\n    this.setState({\n      'date': {\n        'value': date\n      }\n    });\n    console.log(date);\n  }\n\n  FileUploadchange(infs) {\n    const file = infs.file;\n    const fileList = infs.fileList;\n    const events = infs.events;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"signup-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Ajout d'un \\xE9v\\xE9nement ou actualit\\xE9 :\"), React.createElement(\"div\", {\n      className: \"signup-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"signup-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(FormItem, {\n      label: \"Titre :\",\n      validateStatus: this.state.title.validateStatus,\n      help: this.state.title.errorMsg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Input, {\n      size: \"large\",\n      name: \"title\",\n      autoComplete: \"off\",\n      placeholder: \"Titre ...\",\n      value: this.state.title.value,\n      onChange: event => this.handleInputChange(event, this.validateTitle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(FormItem, {\n      label: \"Description :\",\n      validateStatus: this.state.description.validateStatus,\n      help: this.state.description.errorMsg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Input, {\n      size: \"large\",\n      name: \"description\",\n      autoComplete: \"off\",\n      placeholder: \"description ...\",\n      value: this.state.description.value,\n      onChange: event => this.handleInputChange(event, this.validateDescription),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(FormItem, {\n      label: \"Date de Cl\\xF4ture :\",\n      validateStatus: this.state.date.validateStatus,\n      help: this.state.date.errorMsg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      size: \"large\",\n      name: \"date\",\n      value: this.state.date.value,\n      onChange: this.onChangeDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), React.createElement(FormItem, {\n      label: \"Image :\",\n      validateStatus: this.state.file.validateStatus,\n      help: this.state.file.errorMsg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Upload, {\n      accept: \".png,.jpg,.jpeg\",\n      listType: \"picture\",\n      onChange: this.FileUploadchange,\n      multiple: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), \" Upload\"))), React.createElement(FormItem, {\n      label: \"Contenu :\",\n      validateStatus: this.state.content.validateStatus,\n      help: this.state.content.errorMsg,\n      style: this.AreaText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Input.TextArea, {\n      style: this.AreaText,\n      size: \"large\",\n      name: \"content\",\n      autoComplete: \"off\",\n      placeholder: \"Le contenu complet ...\",\n      value: this.state.content.value,\n      onChange: event => this.handleInputChange(event, this.validateContenu),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      size: \"large\",\n      className: \"signup-form-button\",\n      disabled: this.isFormInvalid(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Sign up\"), \"Already registed? \", React.createElement(Link, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Login now!\")))));\n  } // Validation Functions\n\n\n  validateFile(file) {}\n\n}\n\nexport default addEvent;","map":{"version":3,"sources":["C:\\Users\\ZDLaP\\Desktop\\ReactProject\\connect\\ReactJS\\points-connect\\src\\views\\addEvent.jsx"],"names":["React","Component","Link","Form","Input","DatePicker","Button","Upload","Icon","FormItem","Item","addEvent","constructor","props","validateContenu","content","validateDate","email","validateDescription","desc","state","title","value","file","date","description","config","rules","type","required","message","handleInputChange","bind","handleSubmit","isFormInvalid","onChangeDate","AreaText","rows","event","validationFun","target","inputName","name","inputValue","setState","validateStatus","dateString","console","log","FileUploadchange","infs","fileList","events","render","errorMsg","validateTitle","validateFile"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport '../assets/css/Signup.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nimport { Form, Input, DatePicker,Button,Upload,Icon } from 'antd';\r\nconst FormItem = Form.Item;\r\n\r\nclass addEvent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: {\r\n                value: ''\r\n            },\r\n            file: {\r\n                value: ''\r\n            },\r\n            content: {\r\n                value: ''\r\n            },\r\n            date: {\r\n                value: ''\r\n            },\r\n            description: {\r\n             value: ''\r\n         }\r\n\r\n        }\r\n        const config = {\r\n         rules: [{ type: 'object', required: true, message: 'Please select time!' }],\r\n       };\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.isFormInvalid = this.isFormInvalid.bind(this);\r\n        this.onChangeDate=this.onChangeDate.bind(this);\r\n        const AreaText = {\r\n            rows: '5',\r\n            \r\n          };\r\n          \r\n    }\r\n\r\n    handleInputChange(event, validationFun) {\r\n        const target = event.target;\r\n        const inputName = target.name;        \r\n        const inputValue = target.value;\r\n\r\n        this.setState({\r\n            [inputName] : {\r\n                value: inputValue,\r\n                ...validationFun(inputValue)\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n      \r\n    }\r\n\r\n    isFormInvalid() {\r\n        return !(this.state.description.validateStatus === 'success' &&\r\n            this.state.file.validateStatus === 'success'\r\n           \r\n        );\r\n    }\r\n    onChangeDate(date, dateString) {\r\n     this.setState({\r\n          'date' : {\r\n           'value' : date,\r\n\r\n          },\r\n     });\r\n     console.log(date);\r\n   }\r\n   FileUploadchange(infs){\r\n        const file = infs.file;\r\n        const fileList = infs.fileList;\r\n        const events = infs.events;\r\n   }\r\n   \r\n    render() {\r\n  \r\n        return (\r\n            <div className=\"signup-container\">\r\n                <h1 className=\"page-title\">Ajout d'un événement ou actualité :</h1>\r\n                <div className=\"signup-content\">\r\n                    <Form onSubmit={this.handleSubmit} className=\"signup-form\">\r\n                        <FormItem \r\n                            label=\"Titre :\"\r\n                            validateStatus={this.state.title.validateStatus}\r\n                            help={this.state.title.errorMsg}>\r\n                            <Input \r\n                                size=\"large\"\r\n                                name=\"title\"\r\n                                autoComplete=\"off\"\r\n                                placeholder=\"Titre ...\"\r\n                                value={this.state.title.value} \r\n                                onChange={(event) => this.handleInputChange(event, this.validateTitle)} />    \r\n                        </FormItem>\r\n                        <FormItem \r\n                            label=\"Description :\"\r\n                            validateStatus={this.state.description.validateStatus}\r\n                            help={this.state.description.errorMsg}>\r\n                            <Input \r\n                                size=\"large\"\r\n                                name=\"description\"\r\n                                autoComplete=\"off\"\r\n                                placeholder=\"description ...\"\r\n                                value={this.state.description.value} \r\n                                onChange={(event) => this.handleInputChange(event, this.validateDescription)} />    \r\n                        </FormItem>\r\n                       \r\n                        \r\n                        <FormItem \r\n                            label=\"Date de Clôture :\"\r\n                            validateStatus={this.state.date.validateStatus}\r\n                            help={this.state.date.errorMsg}>\r\n                          \r\n                               <DatePicker \r\n                                size=\"large\"\r\n                                name=\"date\"                \r\n                                value={this.state.date.value} \r\n                                onChange={this.onChangeDate} />\r\n                               \r\n                        </FormItem>\r\n                        <FormItem \r\n                            label=\"Image :\"\r\n                            validateStatus={this.state.file.validateStatus}\r\n                            help={this.state.file.errorMsg}>\r\n                            <Upload\r\n                                accept=\".png,.jpg,.jpeg\"\r\n                                listType='picture'\r\n                                onChange={this.FileUploadchange}\r\n                                multiple={false}\r\n\r\n                            >\r\n                                <Button>\r\n                                    <Icon type=\"upload\" /> Upload\r\n                                </Button>\r\n                            </Upload>\r\n                              \r\n                        </FormItem>\r\n                        <FormItem \r\n                            label=\"Contenu :\"\r\n                            validateStatus={this.state.content.validateStatus}\r\n                            help={this.state.content.errorMsg}\r\n                            style={this.AreaText}>\r\n                            <Input.TextArea\r\n                                style={this.AreaText}\r\n                                size=\"large\"\r\n                                name=\"content\"\r\n                                autoComplete=\"off\"\r\n                                placeholder=\"Le contenu complet ...\"\r\n                                value={this.state.content.value} \r\n                                onChange={(event) => this.handleInputChange(event, this.validateContenu)} />    \r\n                        </FormItem>\r\n                        <FormItem>\r\n                            <Button type=\"primary\" \r\n                                htmlType=\"submit\" \r\n                                size=\"large\" \r\n                                className=\"signup-form-button\"\r\n                                disabled={this.isFormInvalid()}>Sign up</Button>\r\n                            Already registed? <Link to=\"/login\">Login now!</Link>\r\n                        </FormItem>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Validation Functions\r\n\r\n    validateContenu = (content) => {\r\n        \r\n        \r\n    }\r\n\r\n    validateDate = (email) => {\r\n      \r\n    \r\n    }\r\n\r\n    validateDescription = (desc) => {\r\n     \r\n    }\r\n\r\n    validateFile(file) {\r\n    }\r\n   }\r\n\r\nexport default addEvent;"]},"metadata":{},"sourceType":"module"}