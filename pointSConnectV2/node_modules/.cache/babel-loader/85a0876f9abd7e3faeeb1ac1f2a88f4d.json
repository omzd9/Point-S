{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZDLaP\\\\Desktop\\\\ReactProject\\\\connect\\\\point s connect v2\\\\src\\\\app\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Route, BrowserRouter as Router, withRouter, Switch } from 'react-router-dom';\nimport { getCurrentUser } from '../util/APIUtils';\nimport { ACCESS_TOKEN } from '../constants';\nimport Login from '../views/Login.js';\nimport LoadingIndicator from '../components/LoadingIndicator';\nimport PrivateRoute from '../components/PrivateRoute';\nimport MainApp from './MainApp';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      isAuthenticated: false,\n      isLoading: false\n    };\n    this.handleLogout = this.handleLogout.bind(this);\n    this.loadCurrentUser = this.loadCurrentUser.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  loadCurrentUser() {\n    this.setState({\n      isLoading: true\n    });\n    getCurrentUser().then(response => {\n      this.setState({\n        currentUser: response,\n        isAuthenticated: true,\n        isLoading: false\n      });\n    }).catch(error => {\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.loadCurrentUser();\n  }\n\n  handleLogout(redirectTo = \"/login\", notificationType = \"success\", description = \"You're successfully logged out.\") {\n    localStorage.removeItem(ACCESS_TOKEN);\n    this.setState({\n      currentUser: null,\n      isAuthenticated: false\n    });\n    this.props.history.push(redirectTo);\n  }\n\n  handleLogin() {\n    this.loadCurrentUser();\n    this.props.history.push(\"/\");\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return React.createElement(LoadingIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"app-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/login\",\n      render: props => React.createElement(Login, Object.assign({\n        authenticated: this.state.isAuthenticated,\n        onLogin: this.handleLogin\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      authenticated: this.state.isAuthenticated,\n      path: \"/\",\n      component: MainApp,\n      handleLogout: this.handleLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["C:\\Users\\ZDLaP\\Desktop\\ReactProject\\connect\\point s connect v2\\src\\app\\App.js"],"names":["React","Component","Route","BrowserRouter","Router","withRouter","Switch","getCurrentUser","ACCESS_TOKEN","Login","LoadingIndicator","PrivateRoute","MainApp","App","constructor","props","state","currentUser","isAuthenticated","isLoading","handleLogout","bind","loadCurrentUser","handleLogin","setState","then","response","catch","error","componentDidMount","redirectTo","notificationType","description","localStorage","removeItem","history","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Route,\r\n  BrowserRouter as Router,\r\n  withRouter,\r\n  Switch\r\n} from 'react-router-dom';\r\n\r\n\r\nimport { getCurrentUser } from '../util/APIUtils';\r\nimport { ACCESS_TOKEN } from '../constants';\r\n\r\nimport Login from '../views/Login.js';\r\n\r\nimport LoadingIndicator from '../components/LoadingIndicator';\r\nimport PrivateRoute from '../components/PrivateRoute';\r\nimport MainApp from './MainApp';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentUser: null,\r\n      isAuthenticated: false,\r\n      isLoading: false\r\n    }\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n    this.loadCurrentUser = this.loadCurrentUser.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);   \r\n  }\r\n\r\n  loadCurrentUser() {\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    getCurrentUser()\r\n    .then(response => {\r\n      this.setState({\r\n        currentUser: response,\r\n        isAuthenticated: true,\r\n        isLoading: false\r\n      });\r\n    }).catch(error => {\r\n      this.setState({\r\n        isLoading: false\r\n      });  \r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadCurrentUser();\r\n  }\r\n\r\n  handleLogout(redirectTo=\"/login\", notificationType=\"success\", description=\"You're successfully logged out.\") {\r\n    localStorage.removeItem(ACCESS_TOKEN);\r\n\r\n    this.setState({\r\n      currentUser: null,\r\n      isAuthenticated: false\r\n    });\r\n\r\n    this.props.history.push(redirectTo);\r\n  \r\n  }\r\n\r\n  handleLogin() {\r\n    this.loadCurrentUser();\r\n    this.props.history.push(\"/\");\r\n  }\r\n\r\n  render() {\r\n    if(this.state.isLoading) {\r\n      return <LoadingIndicator />\r\n    }\r\n    return (\r\n      <div className=\"app-container\">\r\n        <Switch> \r\n            <Route path=\"/login\" \r\n              render={(props) => <Login authenticated={this.state.isAuthenticated} onLogin={this.handleLogin} {...props} />}></Route>\r\n            <PrivateRoute authenticated={this.state.isAuthenticated} path=\"/\" component={MainApp} handleLogout={this.handleLogout}></PrivateRoute>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n"]},"metadata":{},"sourceType":"module"}