{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\ZDLaP\\\\Desktop\\\\ReactProject\\\\connect\\\\point s connect v2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\ZDLaP\\\\Desktop\\\\ReactProject\\\\connect\\\\point s connect v2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\ZDLaP\\\\Desktop\\\\ReactProject\\\\connect\\\\point s connect v2\\\\src\\\\views\\\\Users.jsx\";\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\nimport React, { Component } from 'react';\nimport \"../assets/css/tables.css\";\nconst EditableContext = React.createContext();\n\nconst EditableRow = (_ref) => {\n  let form = _ref.form,\n      index = _ref.index,\n      props = _objectWithoutProperties(_ref, [\"form\", \"index\"]);\n\n  return React.createElement(EditableContext.Provider, {\n    value: form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"tr\", Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  })));\n};\n\nconst EditableFormRow = Form.create()(EditableRow);\n\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDelete = key => {\n      const dataSource = [...this.state.dataSource];\n      this.setState({\n        dataSource: dataSource.filter(item => item.key !== key)\n      });\n    };\n\n    this.columns = [{\n      title: 'name',\n      dataIndex: 'name',\n      width: '30%'\n    }, {\n      title: 'age',\n      dataIndex: 'age'\n    }, {\n      title: 'address',\n      dataIndex: 'address'\n    }, {\n      title: 'operation',\n      dataIndex: 'operation',\n      render: (text, record) => this.state.dataSource.length >= 1 ? React.createElement(Popconfirm, {\n        title: \"Sure to delete?\",\n        onConfirm: () => this.handleDelete(record.key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"javascript:;\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Delete\")) : null\n    }];\n    this.state = {\n      dataSource: [{\n        key: '0',\n        name: 'Edward King 0',\n        age: '32',\n        address: 'London, Park Lane no. 0'\n      }, {\n        key: '1',\n        name: 'Edward King 1',\n        age: '32',\n        address: 'London, Park Lane no. 1'\n      }],\n      count: 2\n    };\n  }\n\n  render() {\n    const dataSource = this.state.dataSource;\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return _objectSpread({}, col, {\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleAdd,\n      type: \"primary\",\n      style: {\n        marginBottom: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Add a row\"), React.createElement(Table, {\n      rowClassName: () => 'editable-row',\n      bordered: true,\n      dataSource: dataSource,\n      columns: columns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Users;","map":{"version":3,"sources":["C:\\Users\\ZDLaP\\Desktop\\ReactProject\\connect\\point s connect v2\\src\\views\\Users.jsx"],"names":["Table","Input","Button","Popconfirm","Form","React","Component","EditableContext","createContext","EditableRow","form","index","props","EditableFormRow","create","Users","constructor","handleDelete","key","dataSource","state","setState","filter","item","columns","title","dataIndex","width","render","text","record","length","name","age","address","count","map","col","editable","onCell","handleSave","handleAdd","marginBottom"],"mappings":"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","sourcesContent":["import { Table, Input, Button, Popconfirm, Form } from 'antd';\r\nimport React, { Component } from 'react';\r\nimport \"../assets/css/tables.css\"\r\n\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n  <EditableContext.Provider value={form}>\r\n    <tr {...props} />\r\n  </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\n\r\n\r\nclass Users extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: 'name',\r\n        dataIndex: 'name',\r\n        width: '30%',\r\n        \r\n      },\r\n      {\r\n        title: 'age',\r\n        dataIndex: 'age',\r\n      },\r\n      {\r\n        title: 'address',\r\n        dataIndex: 'address',\r\n      },\r\n      {\r\n        title: 'operation',\r\n        dataIndex: 'operation',\r\n        render: (text, record) =>\r\n          this.state.dataSource.length >= 1 ? (\r\n            <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record.key)}>\r\n              <a href=\"javascript:;\">Delete</a>\r\n            </Popconfirm>\r\n          ) : null,\r\n      },\r\n    ];\r\n\r\n    this.state = {\r\n      dataSource: [\r\n        {\r\n          key: '0',\r\n          name: 'Edward King 0',\r\n          age: '32',\r\n          address: 'London, Park Lane no. 0',\r\n        },\r\n        {\r\n          key: '1',\r\n          name: 'Edward King 1',\r\n          age: '32',\r\n          address: 'London, Park Lane no. 1',\r\n        },\r\n      ],\r\n      count: 2,\r\n    };\r\n  }\r\n\r\n  handleDelete = key => {\r\n    const dataSource = [...this.state.dataSource];\r\n    this.setState({ dataSource: dataSource.filter(item => item.key !== key) });\r\n  };\r\n\r\n  render() {\r\n    const { dataSource } = this.state;\r\n   \r\n    const columns = this.columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: record => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          handleSave: this.handleSave,\r\n        }),\r\n      };\r\n    });\r\n    return (\r\n      <div>\r\n        <Button onClick={this.handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\r\n          Add a row\r\n        </Button>\r\n        <Table\r\n         \r\n          rowClassName={() => 'editable-row'}\r\n          bordered\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Users;"]},"metadata":{},"sourceType":"module"}