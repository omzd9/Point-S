{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\ZDLaP\\\\Desktop\\\\ReactProject\\\\connect\\\\point s connect v2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\ZDLaP\\\\Desktop\\\\ReactProject\\\\connect\\\\point s connect v2\\\\src\\\\views\\\\Users.jsx\";\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\nimport React, { Component } from 'react';\n\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDelete = key => {\n      const dataSource = [...this.state.dataSource];\n      this.setState({\n        dataSource: dataSource.filter(item => item.key !== key)\n      });\n    };\n\n    this.handleAdd = () => {\n      const _this$state = this.state,\n            count = _this$state.count,\n            dataSource = _this$state.dataSource;\n      const newData = {\n        key: count,\n        name: \"Edward King \".concat(count),\n        age: 32,\n        address: \"London, Park Lane no. \".concat(count)\n      };\n      this.setState({\n        dataSource: [...dataSource, newData],\n        count: count + 1\n      });\n    };\n\n    this.handleSave = row => {\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => row.key === item.key);\n      const item = newData[index];\n      newData.splice(index, 1, _objectSpread({}, item, row));\n      this.setState({\n        dataSource: newData\n      });\n    };\n\n    this.columns = [{\n      title: 'name',\n      dataIndex: 'name',\n      width: '30%',\n      editable: true\n    }, {\n      title: 'age',\n      dataIndex: 'age'\n    }, {\n      title: 'address',\n      dataIndex: 'address'\n    }, {\n      title: 'operation',\n      dataIndex: 'operation',\n      render: (text, record) => this.state.dataSource.length >= 1 ? React.createElement(Popconfirm, {\n        title: \"Sure to delete?\",\n        onConfirm: () => this.handleDelete(record.key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"javascript:;\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Delete\")) : null\n    }];\n    this.state = {\n      dataSource: [{\n        key: '0',\n        name: 'Edward King 0',\n        age: '32',\n        address: 'London, Park Lane no. 0'\n      }, {\n        key: '1',\n        name: 'Edward King 1',\n        age: '32',\n        address: 'London, Park Lane no. 1'\n      }],\n      count: 2\n    };\n  }\n\n  render() {\n    const dataSource = this.state.dataSource;\n    const components = {\n      body: {\n        row: EditableFormRow,\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return _objectSpread({}, col, {\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleAdd,\n      type: \"primary\",\n      style: {\n        marginBottom: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Add a row\"), React.createElement(Table, {\n      components: components,\n      rowClassName: () => 'editable-row',\n      bordered: true,\n      dataSource: dataSource,\n      columns: columns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Users;","map":{"version":3,"sources":["C:\\Users\\ZDLaP\\Desktop\\ReactProject\\connect\\point s connect v2\\src\\views\\Users.jsx"],"names":["Table","Input","Button","Popconfirm","Form","React","Component","Users","constructor","props","handleDelete","key","dataSource","state","setState","filter","item","handleAdd","count","newData","name","age","address","handleSave","row","index","findIndex","splice","columns","title","dataIndex","width","editable","render","text","record","length","components","body","EditableFormRow","cell","EditableCell","map","col","onCell","marginBottom"],"mappings":"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","sourcesContent":["import { Table, Input, Button, Popconfirm, Form } from 'antd';\r\nimport React, { Component } from 'react';\r\nclass Users extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: 'name',\r\n        dataIndex: 'name',\r\n        width: '30%',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: 'age',\r\n        dataIndex: 'age',\r\n      },\r\n      {\r\n        title: 'address',\r\n        dataIndex: 'address',\r\n      },\r\n      {\r\n        title: 'operation',\r\n        dataIndex: 'operation',\r\n        render: (text, record) =>\r\n          this.state.dataSource.length >= 1 ? (\r\n            <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record.key)}>\r\n              <a href=\"javascript:;\">Delete</a>\r\n            </Popconfirm>\r\n          ) : null,\r\n      },\r\n    ];\r\n\r\n    this.state = {\r\n      dataSource: [\r\n        {\r\n          key: '0',\r\n          name: 'Edward King 0',\r\n          age: '32',\r\n          address: 'London, Park Lane no. 0',\r\n        },\r\n        {\r\n          key: '1',\r\n          name: 'Edward King 1',\r\n          age: '32',\r\n          address: 'London, Park Lane no. 1',\r\n        },\r\n      ],\r\n      count: 2,\r\n    };\r\n  }\r\n\r\n  handleDelete = key => {\r\n    const dataSource = [...this.state.dataSource];\r\n    this.setState({ dataSource: dataSource.filter(item => item.key !== key) });\r\n  };\r\n\r\n  handleAdd = () => {\r\n    const { count, dataSource } = this.state;\r\n    const newData = {\r\n      key: count,\r\n      name: `Edward King ${count}`,\r\n      age: 32,\r\n      address: `London, Park Lane no. ${count}`,\r\n    };\r\n    this.setState({\r\n      dataSource: [...dataSource, newData],\r\n      count: count + 1,\r\n    });\r\n  };\r\n\r\n  handleSave = row => {\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex(item => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, {\r\n      ...item,\r\n      ...row,\r\n    });\r\n    this.setState({ dataSource: newData });\r\n  };\r\n\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableFormRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n    const columns = this.columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: record => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          handleSave: this.handleSave,\r\n        }),\r\n      };\r\n    });\r\n    return (\r\n      <div>\r\n        <Button onClick={this.handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\r\n          Add a row\r\n        </Button>\r\n        <Table\r\n          components={components}\r\n          rowClassName={() => 'editable-row'}\r\n          bordered\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Users;"]},"metadata":{},"sourceType":"module"}